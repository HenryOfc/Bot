import yts from 'yt-search';
import fetch from 'node-fetch';

let limit = 320;  // L√≠mite de tama√±o en MB
let confirmation = {};

let handler = async (m, { conn, command, text, args, usedPrefix }) => {
    if (!text) throw `‚ú≥Ô∏è Ejemplo *${usedPrefix + command}* Lil Peep hate my life`;

    let res = await yts(text);
    let vid = res.videos[0];
    if (!vid) throw `‚ú≥Ô∏è V√≠deo/Audio no encontrado`;

    let { title, description, thumbnail, videoId, timestamp, views, ago, url } = vid;

    let who = m.quoted ? m.quoted.sender : m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : m.fromMe ? conn.user.jid : m.sender;

    let chat = global.db.data.chats[m.chat];

    m.react('üéß'); 

    let playMessage = `
‚â° *HJ MUSIC*
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚òÜ üìå *T√≠tulo:* ${vid.title}
‚òÜ üìÜ *Fecha:* ${vid.ago}
‚òÜ ‚åö *Duraci√≥n:* ${vid.timestamp}
‚òÜ üëÄ *Vistas:* ${vid.views.toLocaleString()}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`;

    if (business) {
        conn.sendFile(m.chat, thumbnail, "error.jpg", `${playMessage}\n\nEscribe:\n1Ô∏è‚É£ para recibir el archivo como MP3.\n2Ô∏è‚É£ para recibir el archivo como MP4.`, m);

        confirmation[m.sender] = {
            sender: m.sender,
            to: who,
            url: url,
            chat: chat, 
            timeout: setTimeout(() => {
                delete confirmation[m.sender];
            }, 60000), // 1 minuto de espera
        };
    } else {
        conn.sendButton(m.chat, playMessage, thumbnail, [
            ['üé∂ MP3', `${usedPrefix}hjmp3 ${url}`],
            ['üé• MP4', `${usedPrefix}hjmp4 ${url}`]
        ], m);
    }
}

handler.help = ['play'];
handler.tags = ['dl'];
handler.command = ['play', 'playvid'];
handler.disabled = false;

export default handler;

handler.before = async m => {
    if (m.isBaileys) return; // Ignorar mensajes del bot
    if (!(m.sender in confirmation)) return; // Solo continuar si hay confirmaci√≥n pendiente

    let { sender, timeout, url, chat } = confirmation[m.sender]; // Desestructuraci√≥n que incluye la url y chat
    if (m.text.trim() === '1') {
        clearTimeout(timeout);
        delete confirmation[m.sender];

        // Enviar el mensaje de "Descargando MP3..."
        await conn.sendMessage(m.chat, 'üì• *Descargando MP3...* Por favor, espera...', 'conversation');

        // Solicitar MP3 desde la nueva API
        let res = await fetch(`https://api.fgmods.xyz/api/downloader/ytmp3?url=${url}&apikey=fg_M6khGFXR`);
        let data = await res.json();

        if (data.estado !== true) {
            throw `‚ú≥Ô∏è Hubo un problema al obtener el archivo MP3. Intenta nuevamente.`;
        }

        let { title, dl_url, tama√±o, tama√±oB } = data.resultado;

        // Verificar que la URL de descarga est√° disponible
        if (!dl_url) {
            throw `‚ú≥Ô∏è No se pudo obtener la URL de descarga del MP3. Intenta nuevamente.`;
        }

        // Enviar el archivo MP3
        conn.sendFile(m.chat, dl_url, title + '.mp3', `‚â°  *HJ YTDL*\n\n‚ñ¢ *üìå T√≠tulo* : ${title}\n*‚öñÔ∏è Tama√±o* : ${tama√±o}`, m, false, { mimetype: 'audio/mpeg', asDocument: chat.useDocument });
        m.react('‚úÖ');
    } else if (m.text.trim() === '2') {
        clearTimeout(timeout);
        delete confirmation[m.sender];

        // Enviar el mensaje de "Descargando MP4..."
        await conn.sendMessage(m.chat, 'üì• *Descargando MP4...* Por favor, espera...', 'conversation');

        // Solicitar MP4 desde la nueva API
        let res = await fetch(`https://api.fgmods.xyz/api/downloader/ytmp4?url=${url}&apikey=fg_M6khGFXR`);
        let data = await res.json();

        if (data.estado !== true) {
            throw `‚ú≥Ô∏è Hubo un problema al obtener el archivo MP4. Intenta nuevamente.`;
        }

        let { title, dl_url, tama√±o, tama√±oB } = data.resultado;

        // Verificar que la URL de descarga est√° disponible
        if (!dl_url) {
            throw `‚ú≥Ô∏è No se pudo obtener la URL de descarga del MP4. Intenta nuevamente.`;
        }

        let isLimit = limit * 1024 * 1024 < tama√±oB; // Verificar si el tama√±o excede el l√≠mite

        // Mensaje de carga de descarga
        await conn.loadingMsg(m.chat, 'üì• Descargando', ` ${isLimit ? `‚â°  *HJ YTDL*\n\n‚ñ¢ *‚öñÔ∏è Tama√±o*: ${tama√±o}\n\n‚ñ¢ _Limite_ *+${limit} MB*` : '‚úÖ Descarga Completada' }`, ["‚ñ¨‚ñ≠‚ñ≠‚ñ≠‚ñ≠‚ñ≠", "‚ñ¨‚ñ¨‚ñ≠‚ñ≠‚ñ≠‚ñ≠", "‚ñ¨‚ñ¨‚ñ¨‚ñ≠‚ñ≠‚ñ≠", "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ≠‚ñ≠", "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ≠", "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"], m);

        // Enviar el archivo MP4 si no excede el l√≠mite
        if (!isLimit) {
            conn.sendFile(m.chat, dl_url, title + '.mp4', `‚â°  *HJ YTDL*\n*üìå T√≠tulo:* ${title}\n*‚öñÔ∏è Peso* ${tama√±o}`, m, false, { asDocument: chat.useDocument });
        }

        m.react('‚úÖ');
    }
}
